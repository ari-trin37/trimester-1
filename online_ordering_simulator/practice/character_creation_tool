using System

class Character

	//character properties
	public string Name { get; set; }
	public string Race { get; set; }
	public string Class { get; set; }
	public string Gender { get; set; }

	//appearance
	public string HairColor { get; set; }
	public string EyeColor { get; set; }
	public float Height [ get; set;]

	//display of character details
	public void DisplayCharacterInfo()

		Console.WriteLine("\n-- Character Details --");
        Console.WriteLine($"Name: {Name}");
        Console.WriteLine($"Race: {Race}");
        Console.WriteLine($"Class: {Class}");
        Console.WriteLine($"Gender: {Gender}");
        Console.WriteLine("\nAttributes:");
        Console.WriteLine($"Strength: {Strength}");
        Console.WriteLine($"Agility: {Agility}");
        Console.WriteLine($"Intelligence: {Intelligence}");
        Console.WriteLine("\nAppearance:");
        Console.WriteLine($"Hair Color: {HairColor}");
		 Console.WriteLine($"Eye Color: {EyeColor}");
        Console.WriteLine($"Height: {Height} meters");

class CharacterCreationTool
{
    static void Main()
    {
        Character newCharacter = new Character();

        // Ask character's name
        Console.Write("Enter your character's name: ");
        newCharacter.Name = Console.ReadLine();

        // Choose race
        Console.Write("Choose your character's race (Human, Elf, Orc): ");
        newCharacter.Race = Console.ReadLine();
	    // Choose a class
        Console.Write("Choose your character's class (Warrior, Mage, Archer): ");
        newCharacter.Class = Console.ReadLine();

        // Choose gender
        Console.Write("Choose your character's gender (Male, Female, Other): ");
        newCharacter.Gender = Console.ReadLine();

        // Step 5: Set attributes
        Console.Write("Enter your character's strength (1-100): ");
        newCharacter.Strength = int.Parse(Console.ReadLine());

        Console.Write("Enter your character's agility (1-100): ");
    }


using System;
using System.Runtime.InteropServices;

class Program
{
    static void Main(string[] args)
    {
        //prints message, reads input as string
        Console.WriteLine("Enter a Response Code: ");
        string input = Console.ReadLine();

        int statusCode;
        bool isValid = int.TryParse(input, out statusCode);
            if (!isValid)
        {
            Console.WriteLine("This input is not a valid number.");
            return;
        }

        if (statusCode >= 100 && statusCode < 200)
            {
                if(statusCode == 105) 
            {
                System.Console.WriteLine($"(status code) is invalid response");
            }
            else 
            {
                Console.WriteLine($"{statusCode} is an informational response.");
            }
        }
        else if (statusCode >= 200 && statusCode < 300)
        {
            Console.WriteLine($"{statusCode} is a Successful Response.");
        }
        else if (statusCode >= 300 && statusCode <= 400)
        {
            Console.WriteLine($"{statusCode} is a Redirection Response");
        }
        else if (statusCode >= 400 && statusCode <= 500)
        {
            Console.WriteLine($"{statusCode} is a Client Error Response.");
        }
        else if (statusCode >= 500 && statusCode < 600)
        {
            Console.WriteLine($"{statusCode} is a Server Error Response.");
        }
        else
        {
            Console.WriteLine($"{statusCode} is not a valid Response.");
        }
    }
}